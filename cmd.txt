To repeatedly run a curl command every 5 seconds using a command line interface, you can use a loop. The exact syntax depends on your operating system

  linux:
while true; do
    curl your_url_here
    sleep 5
done


For Windows, you can use a batch script:

:loop
curl your_url_here
timeout /t 5 >nul
goto loop

https://www.webpagetest.org/

https://check-host.net/
  
---
This command flushes and resets the contents of the DNS client resolver cache. It can be useful if you are having DNS resolution issues.  
  ipconfig /flushdns
--------------------------------------------------------------------------------------------

#! /bin/bash
sudo apt update -y
sudo apt install nginx -y
sudo systemctl enable nginx
echo "This host-IP-adress $(hostname -i)" > /var/www/html/index.nginx-debian.html

----------------------------------------------------------------------------------

systemctl is a command-line utility in Linux systems that is used to control and communicate with the systemd system and service manager.
systemd is a system and service manager for Linux, which is widely used in modern distributions. Here are some common systemctl commands:

systemctl:

systemctl is a more modern and feature-rich command that is part of the systemd init system.

Lists all active units (services, sockets, devices, etc.).

systemctl list-units

systemctl list-units --type=service

systemctl start service-name
systemctl stop service-name
systemctl restart service-name
systemctl enable service-name
systemctl disable service-name
systemctl status service-name

Enables the specified service to start automatically on boot.

systemctl enable service-name
systemctl disable service-name
systemctl status service-name
Reloads the systemd manager configuration.
systemctl daemon-reload
journalctl -u service-name



service service-name start
service service-name stop
service service-name restart
---------------------------------------------------------------------------------------------------------------


<?php
// Execute the ifconfig command
$result = shell_exec('pwd');

// Output the result
echo "<pre>$result</pre>";
?>



linux
route -n 
windows route PRINT
-----------------------------------------------------------------------
efs

apt update
apt install nginx -y

sudo apt install nfs-common
sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport fs-093b4661169625b5f.efs.us-east-1.amazonaws.com:/ /var/www/html/
cd /var/www/html/
vi /etc/fstab

file_system_id.efs.aws-region.amazonaws.com:/ mount_point nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0


fs-093b4661169625b5f.efs.us-east-1.amazonaws.com:/ /var/www/html/ nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0

echo "This host-IP-adress $(hostname -i)" > /var/www/html/index.html
cat /var/www/html/index.html
df -hT



=============================================================================================================================================





















